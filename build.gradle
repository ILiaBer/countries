plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'countries'

subprojects {
    ext {
        springGraphqlDateTimeVersion = '6.0.0'
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.11.0-SNAPSHOT'
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }

    dependencies {
        implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.grpc:grpc-services'
        implementation 'org.springframework.boot:spring-boot-starter-graphql'
        implementation "com.tailrocks.graphql:graphql-datetime-spring-boot-starter:6.0.0"
        implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.grpc:grpc-services'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "org.flywaydb:flyway-core:10.17.1"
        implementation "org.flywaydb:flyway-database-postgresql:10.17.1"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        runtimeOnly "org.postgresql:postgresql:42.7.3"

    }

    tasks.named('test') {
        useJUnitPlatform()
    }


    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${dependencyManagement.importedProperties['protobuf-java.version']}"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${dependencyManagement.importedProperties['grpc.version']}"
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {
                    option 'jakarta_omit'
                    option '@generated=omit'
                }
            }
        }
    }
}